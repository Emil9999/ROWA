openapi: 3.0.0
servers: []
info:
  description: Standard Susteyn API for FarmV3.0
  version: "1.0.0"
  title: Susteyn API for FarmV3.0
  contact:
    email: team@susteyn.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: planting
    description: Planting endpoints
  - name: harvesting
    description: Harvesting Endpoints
paths:
  
  /plant/finish:
    get:
      tags:
        - planting
      summary: searches inventory
      operationId: searchInventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlantablePlants'
        '400':
          description: bad input parameter
    post:
      tags:
        - planting
      summary: adds an inventory item
      operationId: addInventory
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModuleToPlant'
        description: Inventory item to add
        
  /dashboard/plantable-plants:
    get:
          tags:
            - planting
          summary: returns plantable plants
          operationId: getPlantablePlants
          description: |
            returns plantable plants
          responses:
            '200':
              description: search results matching criteria
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlantablePlants'
            '400':
              description: bad input parameter
              
  /admin/change-planttype:
    post:
          tags:
            - admin
          summary: returns plantable plants
          operationId: changePlanttype
          description: |
            returns plantable plants
          responses:
            '200':
              description: search results matching criteria
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChangeModulePlants'
            '400':
              description: bad input parameter
      
components:
  schemas:
    PlantablePlants:
      type: object
      required:
        - plantType
        - module
        - plantableSpots
      properties:
        plantType:
          type: string
          example: Neckar Giant
        module:
          type: integer
          example: 2
        position:
          type: integer
          example: 3
          
    ModuleToPlant:
          type: object
          required:
            - modulenum
            - variety
          properties:
            modulenum:
              type: integer
              example: 1
            variety:
              type: string
              example: Neckar Giant
    ChangeModulePlants:
          type: object
          required:
            - modulenum
            - variety
          properties:
            modulenum:
              type: integer
              example: 1
            varieties:
              type: array
              items:
                type: string
                example: "Mint"
             
              
            
          
    
       